events {
    worker_connections 1024;
}


http {

    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;
    limit_conn_zone $binary_remote_addr zone=addr:1m;
    limit_req_zone  $binary_remote_addr zone=one:1m   rate=5r/s;

    upstream backend{
        server myserver:8501 ;
    }


    server {
        listen 80;
        listen [::]:80;

        server_name mydomain.com ;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name mydomain.com ;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://backend;
            proxy_ssl_verify off;  # Disable if your backend are using self-signed certificates
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /_stcore/stream {
            proxy_pass http://backend/_stcore/stream;
            proxy_ssl_verify off;  # Disable if your backend are using self-signed certificates
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }
    }
}
